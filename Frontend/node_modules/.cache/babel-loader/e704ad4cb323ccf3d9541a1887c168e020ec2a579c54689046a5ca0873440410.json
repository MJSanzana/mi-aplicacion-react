{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  usuario: null,\n  login: () => {},\n  logout: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [usuario, setUsuario] = useState(null);\n  const login = datosLogin => {\n    // Suponiendo que datosLogin es la respuesta del backend\n    const {\n      userId,\n      token\n    } = datosLogin;\n\n    // Guarda el token en localStorage (opcional)\n    localStorage.setItem('token', token);\n\n    // Actualiza el estado del usuario\n    setUsuario({\n      userId,\n      token\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUsuario(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      usuario,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"BwFuWQ8BCb/dBNCwqOoPpbw2vyU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","usuario","login","logout","AuthProvider","children","_s","setUsuario","datosLogin","userId","token","localStorage","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n    usuario: null,\r\n    login: () => {},\r\n    logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [usuario, setUsuario] = useState(null);\r\n\r\n    const login = (datosLogin) => {\r\n        // Suponiendo que datosLogin es la respuesta del backend\r\n        const { userId, token } = datosLogin;\r\n        \r\n        // Guarda el token en localStorage (opcional)\r\n        localStorage.setItem('token', token);\r\n\r\n        // Actualiza el estado del usuario\r\n        setUsuario({\r\n            userId,\r\n            token\r\n        });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUsuario(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ usuario, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EACrCK,OAAO,EAAE,IAAI;EACbC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACL,OAAO,EAAEM,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMK,KAAK,GAAIM,UAAU,IAAK;IAC1B;IACA,MAAM;MAAEC,MAAM;MAAEC;IAAM,CAAC,GAAGF,UAAU;;IAEpC;IACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;IAEpC;IACAH,UAAU,CAAC;MACPE,MAAM;MACNC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMP,MAAM,GAAGA,CAAA,KAAM;IACjBQ,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;IAChCN,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEd,OAAO;MAAEC,KAAK;MAAEC;IAAO,CAAE;IAAAE,QAAA,EACnDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACb,EAAA,CA3BWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}