{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\Mensajes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mensajes() {\n  _s();\n  const {\n    usuario\n  } = useContext(AuthContext);\n  const [mensajesEnviados, setMensajesEnviados] = useState([]);\n  const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajeAResponder, setMensajeAResponder] = useState(null);\n  const [nombresUsuarios, setNombresUsuarios] = useState({});\n  const [showRecibidos, setShowRecibidos] = useState(false);\n  const [showEnviados, setShowEnviados] = useState(false);\n  const isMounted = useRef(true);\n  const obtenerNombreUsuarioPorId = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/Users/${userId}`);\n      return response.data.NombreUsuario; // Asume que la respuesta tiene una propiedad NombreUsuario\n    } catch (error) {\n      console.error('Error al obtener el nombre del usuario', error);\n      return 'Desconocido'; // Nombre por defecto en caso de error\n    }\n  };\n\n  const cargarMensajes = async () => {\n    if (isMounted.current && usuario !== null && usuario !== void 0 && usuario.userId) {\n      setIsLoading(true);\n      try {\n        const enviados = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\n        const recibidos = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\n        const nombres = {};\n        // Obtener nombres de los emisores y receptores de los mensajes\n        const idsUsuarios = new Set([...enviados.data, ...recibidos.data].map(m => [m.Emisor_Id, m.Receptor_Id]).flat());\n        const promesasNombres = Array.from(idsUsuarios).map(id => obtenerNombreUsuarioPorId(id));\n        const resultadosNombres = await Promise.all(promesasNombres);\n\n        // Asignar nombres obtenidos a su respectivo ID\n        Array.from(idsUsuarios).forEach((id, index) => {\n          nombres[id] = resultadosNombres[index];\n        });\n        setNombresUsuarios(nombres);\n        if (Array.isArray(enviados.data) && Array.isArray(recibidos.data)) {\n          setMensajesEnviados(enviados.data);\n          setMensajesRecibidos(recibidos.data);\n        } else {\n          console.error('Los datos recibidos no son una lista');\n        }\n      } catch (error) {\n        console.error('Error al obtener mensajes', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  useEffect(() => {\n    console.log('Mensajes cargados:', mensajesRecibidos, mensajesEnviados);\n    cargarMensajes();\n    const interval = usuario !== null && usuario !== void 0 && usuario.userId ? setInterval(cargarMensajes, 60000) : null;\n    return () => {\n      clearInterval(interval);\n      isMounted.current = false;\n    };\n  }, [usuario]);\n  useEffect(() => {\n    console.log('Mensaje a responder:', mensajeAResponder);\n  }, [mensajeAResponder]);\n  const responderMensaje = async mensajeParaResponder => {\n    if (nuevoMensaje.trim()) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/mensajes/crear', {\n          emisorId: usuario.userId,\n          receptorId: mensajeParaResponder.Emisor_Id,\n          mensaje: nuevoMensaje,\n          productoId: mensajeParaResponder.Producto_Id\n        });\n        console.log(response.data);\n        setNuevoMensaje('');\n        setMensajeAResponder(null);\n        await cargarMensajes();\n      } catch (error) {\n        console.error('Error al responder mensaje', error);\n      }\n    }\n  };\n  const marcarComoLeido = async mensajeId => {\n    try {\n      const response = await axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${mensajeId}`);\n      alert(response.data.message);\n      await cargarMensajes();\n    } catch (error) {\n      console.error('Error al marcar mensaje como leído', error);\n      alert('Error al marcar mensaje como leído');\n    }\n  };\n  const seleccionarMensajeParaResponder = mensaje => {\n    console.log('Mensaje seleccionado para responder:', mensaje);\n    setMensajeAResponder(mensaje);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Mensajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando mensajes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mensajes Recibidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), !isLoading && mensajesRecibidos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No has recibido mensajes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 66\n      }, this), !isLoading && mensajesRecibidos.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"De:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 50\n            }, this), \" \", nombresUsuarios[mensaje.Emisor_Id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mensaje:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 54\n            }, this), \" \", mensaje.Mensaje]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => marcarComoLeido(mensaje.Id),\n            children: \"Marcar como Le\\xEDdo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setMensajeAResponder(mensaje),\n            children: \"Responder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), mensajeAResponder && mensajeAResponder.Id === mensaje.Id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              value: nuevoMensaje,\n              onChange: e => setNuevoMensaje(e.target.value),\n              placeholder: \"Escribe tu respuesta aqu\\xED...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-2\",\n              onClick: () => responderMensaje(mensaje),\n              children: \"Enviar Respuesta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)\n      }, mensaje.Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mensajes Enviados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), !isLoading && mensajesEnviados.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No has enviado mensajes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 65\n      }, this), !isLoading && mensajesEnviados.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Para:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 50\n            }, this), \" \", nombresUsuarios[mensaje.Receptor_Id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Para:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 54\n            }, this), \" \", mensaje.Receptor_Id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mensaje:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 54\n            }, this), \" \", mensaje.Mensaje]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), mensaje.Respuesta && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => seleccionarMensajeParaResponder(mensaje),\n            children: \"Ver Respuesta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, mensaje.Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(Mensajes, \"zf9w7/p2xkuhptqT4vDJUVoVbBM=\");\n_c = Mensajes;\nexport default Mensajes;\n//respaldo\nvar _c;\n$RefreshReg$(_c, \"Mensajes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","axios","AuthContext","jsxDEV","_jsxDEV","Mensajes","_s","usuario","mensajesEnviados","setMensajesEnviados","mensajesRecibidos","setMensajesRecibidos","isLoading","setIsLoading","nuevoMensaje","setNuevoMensaje","mensajeAResponder","setMensajeAResponder","nombresUsuarios","setNombresUsuarios","showRecibidos","setShowRecibidos","showEnviados","setShowEnviados","isMounted","obtenerNombreUsuarioPorId","userId","response","get","data","NombreUsuario","error","console","cargarMensajes","current","enviados","recibidos","nombres","idsUsuarios","Set","map","m","Emisor_Id","Receptor_Id","flat","promesasNombres","Array","from","id","resultadosNombres","Promise","all","forEach","index","isArray","log","interval","setInterval","clearInterval","responderMensaje","mensajeParaResponder","trim","post","emisorId","receptorId","mensaje","productoId","Producto_Id","marcarComoLeido","mensajeId","put","alert","message","seleccionarMensajeParaResponder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Mensaje","onClick","Id","value","onChange","e","target","placeholder","Respuesta","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/Mensajes.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Mensajes() {\r\n    const { usuario } = useContext(AuthContext);\r\n    const [mensajesEnviados, setMensajesEnviados] = useState([]);\r\n    const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n    const [mensajeAResponder, setMensajeAResponder] = useState(null);\r\n    const [nombresUsuarios, setNombresUsuarios] = useState({});\r\n    const [showRecibidos, setShowRecibidos] = useState(false);\r\n    const [showEnviados, setShowEnviados] = useState(false);\r\n    const isMounted = useRef(true);\r\n\r\n    const obtenerNombreUsuarioPorId = async (userId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/Users/${userId}`);\r\n            return response.data.NombreUsuario; // Asume que la respuesta tiene una propiedad NombreUsuario\r\n        } catch (error) {\r\n            console.error('Error al obtener el nombre del usuario', error);\r\n            return 'Desconocido'; // Nombre por defecto en caso de error\r\n        }\r\n    };\r\n\r\n    const cargarMensajes = async () => {\r\n        if (isMounted.current && usuario?.userId) {\r\n            setIsLoading(true);\r\n            try {\r\n                const enviados = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\r\n                const recibidos = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\r\n                const nombres = {};\r\n                // Obtener nombres de los emisores y receptores de los mensajes\r\n                const idsUsuarios = new Set([...enviados.data, ...recibidos.data].map(m => [m.Emisor_Id, m.Receptor_Id]).flat());\r\n                const promesasNombres = Array.from(idsUsuarios).map(id => obtenerNombreUsuarioPorId(id));\r\n                const resultadosNombres = await Promise.all(promesasNombres);\r\n        \r\n                // Asignar nombres obtenidos a su respectivo ID\r\n                Array.from(idsUsuarios).forEach((id, index) => {\r\n                    nombres[id] = resultadosNombres[index];\r\n                });\r\n        \r\n                setNombresUsuarios(nombres);\r\n\r\n                if (Array.isArray(enviados.data) && Array.isArray(recibidos.data)) {\r\n                    setMensajesEnviados(enviados.data);\r\n                    setMensajesRecibidos(recibidos.data);\r\n                } else {\r\n                    console.error('Los datos recibidos no son una lista');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener mensajes', error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('Mensajes cargados:', mensajesRecibidos, mensajesEnviados);\r\n        cargarMensajes();\r\n        const interval = usuario?.userId ? setInterval(cargarMensajes, 60000) : null;\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n            isMounted.current = false;\r\n        };\r\n    }, [usuario]);\r\n\r\n    useEffect(() => {\r\n        console.log('Mensaje a responder:', mensajeAResponder);\r\n    }, [mensajeAResponder]);\r\n\r\n\r\n\r\n    const responderMensaje = async (mensajeParaResponder) => {\r\n        if (nuevoMensaje.trim()) {\r\n            try {\r\n                const response = await axios.post('http://localhost:5000/api/mensajes/crear', {\r\n                    emisorId: usuario.userId,\r\n                    receptorId: mensajeParaResponder.Emisor_Id,\r\n                    mensaje: nuevoMensaje,\r\n                    productoId: mensajeParaResponder.Producto_Id\r\n                });\r\n                console.log(response.data);\r\n                setNuevoMensaje('');\r\n                setMensajeAResponder(null);\r\n                await cargarMensajes();\r\n            } catch (error) {\r\n                console.error('Error al responder mensaje', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const marcarComoLeido = async (mensajeId) => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${mensajeId}`);\r\n            alert(response.data.message);\r\n            await cargarMensajes();\r\n        } catch (error) {\r\n            console.error('Error al marcar mensaje como leído', error);\r\n            alert('Error al marcar mensaje como leído');\r\n        }\r\n    };\r\n\r\n    const seleccionarMensajeParaResponder = (mensaje) => {\r\n        console.log('Mensaje seleccionado para responder:', mensaje);\r\n        setMensajeAResponder(mensaje);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"my-3\">Mensajes</h2>\r\n            {isLoading && <p>Cargando mensajes...</p>}\r\n\r\n            {/* Mensajes recibidos */}\r\n            <div>\r\n                <h3>Mensajes Recibidos</h3>\r\n                {!isLoading && mensajesRecibidos.length === 0 && <p>No has recibido mensajes.</p>}\r\n                {!isLoading && mensajesRecibidos.map((mensaje) => (\r\n                    <div key={mensaje.Id} className=\"card mb-2\">\r\n                        <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>De:</strong> {nombresUsuarios[mensaje.Emisor_Id]}</p>\r\n                            <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.Mensaje}</p>\r\n                            <button className=\"btn btn-secondary\" onClick={() => marcarComoLeido(mensaje.Id)}>Marcar como Leído</button>\r\n                            <button className=\"btn btn-primary\" onClick={() => setMensajeAResponder(mensaje)}>Responder</button>\r\n                            {mensajeAResponder && mensajeAResponder.Id === mensaje.Id && (\r\n                                <div className=\"mb-3\">\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        value={nuevoMensaje}\r\n                                        onChange={(e) => setNuevoMensaje(e.target.value)}\r\n                                        placeholder=\"Escribe tu respuesta aquí...\"\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-primary mt-2\"\r\n                                        onClick={() => responderMensaje(mensaje)}\r\n                                    >\r\n                                        Enviar Respuesta\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Mensajes enviados */}\r\n            <div>\r\n                <h3>Mensajes Enviados</h3>\r\n                {!isLoading && mensajesEnviados.length === 0 && <p>No has enviado mensajes.</p>}\r\n                {!isLoading && mensajesEnviados.map((mensaje) => (\r\n                    <div key={mensaje.Id} className=\"card mb-2\">\r\n                        <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>Para:</strong> {nombresUsuarios[mensaje.Receptor_Id]}</p>\r\n                            <p className=\"card-text\"><strong>Para:</strong> {mensaje.Receptor_Id}</p>\r\n                            <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.Mensaje}</p>\r\n                            {mensaje.Respuesta && (\r\n                                <button className=\"btn btn-primary\" onClick={() => seleccionarMensajeParaResponder(mensaje)}>Ver Respuesta</button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Mensajes;\r\n//respaldo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}