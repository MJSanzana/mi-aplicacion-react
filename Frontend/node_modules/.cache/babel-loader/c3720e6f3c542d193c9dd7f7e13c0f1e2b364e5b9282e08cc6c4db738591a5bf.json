{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\Mensajes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mensajes() {\n  _s();\n  const [mensajesEnviados, setMensajesEnviados] = useState([]);\n  const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  useEffect(() => {\n    // Obtener mensajes enviados\n    axios.get('http://localhost:5000/api/mensajes/enviados/11').then(response => {\n      setMensajesEnviados(response.data);\n    }).catch(error => console.error('Error al obtener mensajes enviados', error));\n\n    // Obtener mensajes recibidos\n    // Suponiendo que tienes una endpoint para esto, ajusta según tu API\n    axios.get('http://localhost:5000/api/mensajes/recibidos').then(response => {\n      setMensajesRecibidos(response.data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error al obtener mensajes recibidos', error);\n      setIsLoading(false);\n    });\n  }, []);\n  const enviarMensaje = () => {\n    // Enviar un nuevo mensaje\n    // Ajusta los datos y la URL según tu API\n    axios.post('http://localhost:5000/api/mensajes/crear', {\n      emisorId: 11,\n      receptorId: 8,\n      mensaje: nuevoMensaje,\n      productoId: 9\n    }).then(response => {\n      // Actualiza la lista de mensajes o notifica al usuario\n    }).catch(error => console.error('Error al enviar mensaje', error));\n  };\n  const marcarComoLeido = idMensaje => {\n    // Marcar un mensaje como leído\n    axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`).then(response => {\n      // Actualiza el estado o la UI según sea necesario\n    }).catch(error => console.error('Error al marcar mensaje como leído', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Mensajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando mensajes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: nuevoMensaje,\n        onChange: e => setNuevoMensaje(e.target.value),\n        placeholder: \"Escribe tu mensaje aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: enviarMensaje,\n        children: \"Enviar Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), !isLoading && mensajesEnviados.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No has enviado mensajes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 61\n    }, this), !isLoading && mensajesEnviados.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Para:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 50\n          }, this), \" \", mensaje.destinatario]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mensaje:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 50\n          }, this), \" \", mensaje.contenido]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => marcarComoLeido(mensaje.id),\n          children: \"Marcar como Le\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, mensaje.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Mensajes, \"UO63uj9DEKA4Jz3kLLVHQwnYETs=\");\n_c = Mensajes;\nexport default Mensajes;\nvar _c;\n$RefreshReg$(_c, \"Mensajes\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Mensajes","_s","mensajesEnviados","setMensajesEnviados","mensajesRecibidos","setMensajesRecibidos","isLoading","setIsLoading","nuevoMensaje","setNuevoMensaje","get","then","response","data","catch","error","console","enviarMensaje","post","emisorId","receptorId","mensaje","productoId","marcarComoLeido","idMensaje","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","length","map","destinatario","contenido","id","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/Mensajes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Mensajes() {\r\n    const [mensajesEnviados, setMensajesEnviados] = useState([]);\r\n    const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Obtener mensajes enviados\r\n        axios.get('http://localhost:5000/api/mensajes/enviados/11')\r\n            .then(response => {\r\n                setMensajesEnviados(response.data);\r\n            })\r\n            .catch(error => console.error('Error al obtener mensajes enviados', error));\r\n\r\n        // Obtener mensajes recibidos\r\n        // Suponiendo que tienes una endpoint para esto, ajusta según tu API\r\n        axios.get('http://localhost:5000/api/mensajes/recibidos')\r\n            .then(response => {\r\n                setMensajesRecibidos(response.data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error al obtener mensajes recibidos', error);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const enviarMensaje = () => {\r\n        // Enviar un nuevo mensaje\r\n        // Ajusta los datos y la URL según tu API\r\n        axios.post('http://localhost:5000/api/mensajes/crear', {\r\n            emisorId: 11, \r\n            receptorId: 8,\r\n            mensaje: nuevoMensaje,\r\n            productoId: 9\r\n        })\r\n        .then(response => {\r\n            // Actualiza la lista de mensajes o notifica al usuario\r\n        })\r\n        .catch(error => console.error('Error al enviar mensaje', error));\r\n    };\r\n\r\n    const marcarComoLeido = (idMensaje) => {\r\n        // Marcar un mensaje como leído\r\n        axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`)\r\n            .then(response => {\r\n                // Actualiza el estado o la UI según sea necesario\r\n            })\r\n            .catch(error => console.error('Error al marcar mensaje como leído', error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"my-3\">Mensajes</h2>\r\n            {isLoading && <p>Cargando mensajes...</p>}\r\n\r\n            {/* UI para enviar un nuevo mensaje */}\r\n            <div className=\"mb-3\">\r\n                <textarea \r\n                    className=\"form-control\" \r\n                    value={nuevoMensaje} \r\n                    onChange={(e) => setNuevoMensaje(e.target.value)} \r\n                    placeholder=\"Escribe tu mensaje aquí...\"\r\n                />\r\n                <button className=\"btn btn-primary mt-2\" onClick={enviarMensaje}>Enviar Mensaje</button>\r\n            </div>\r\n\r\n            {/* Mostrar mensajes enviados y recibidos */}\r\n            {!isLoading && mensajesEnviados.length === 0 && <p>No has enviado mensajes.</p>}\r\n            {!isLoading && mensajesEnviados.map(mensaje => (\r\n                <div key={mensaje.id} className=\"card mb-2\">\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>Para:</strong> {mensaje.destinatario}</p>\r\n                        <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.contenido}</p>\r\n                        <button className=\"btn btn-secondary\" onClick={() => marcarComoLeido(mensaje.id)}>Marcar como Leído</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mensajes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}