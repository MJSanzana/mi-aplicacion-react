{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthProvider.js\nimport React, { createContext, useState, useEffect, useC } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [usuario, setUsuario] = useState(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId');\n    const tipoUsuario = localStorage.getItem('tipoUsuario');\n    const NombreUsuario = localStorage.getItem('NombreUsuario');\n    // Devuelve el usuario si todos los valores están presentes\n    return token && userId && tipoUsuario ? {\n      token,\n      userId,\n      tipoUsuario,\n      NombreUsuario\n    } : null;\n  });\n  useEffect(() => {\n    // Esta función verifica si el usuario actualmente en el estado es diferente al usuario almacenado localmente\n    const checkUser = () => {\n      const token = localStorage.getItem('token');\n      const userId = localStorage.getItem('userId');\n      const tipoUsuario = localStorage.getItem('tipoUsuario');\n\n      // Comprueba si hay alguna diferencia y, de ser así, actualiza el estado\n      if (token && userId && tipoUsuario && ((usuario === null || usuario === void 0 ? void 0 : usuario.userId) !== userId || (usuario === null || usuario === void 0 ? void 0 : usuario.token) !== token || (usuario === null || usuario === void 0 ? void 0 : usuario.tipoUsuario) !== tipoUsuario)) {\n        setUsuario({\n          userId,\n          tipoUsuario,\n          token\n        });\n      }\n    };\n\n    // Llama a la función checkUser cuando el componente se monta\n    checkUser();\n  }, []);\n  const login = datosUsuario => {\n    localStorage.setItem('token', datosUsuario.token);\n    localStorage.setItem('userId', datosUsuario.userId);\n    localStorage.setItem('tipoUsuario', datosUsuario.tipoUsuario);\n    localStorage.setItem('NombreUsuario', datosUsuario.NombreUsuario);\n    setUsuario({\n      userId: datosUsuario.userId,\n      tipoUsuario: datosUsuario.tipoUsuario,\n      token: datosUsuario.token,\n      NombreUsuario: datosUsuario.NombreUsuario\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('tipoUsuario');\n    setUsuario(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      usuario,\n      login,\n      logout,\n      setUsuario\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"dJ5mzbu2M44xKP8HXFm7sHsn4TY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useC","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","usuario","setUsuario","token","localStorage","getItem","userId","tipoUsuario","NombreUsuario","checkUser","login","datosUsuario","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/AuthContext.js"],"sourcesContent":["// AuthProvider.js\r\nimport React, { createContext, useState, useEffect, useC } from 'react';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [usuario, setUsuario] = useState(() => {\r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId');\r\n        const tipoUsuario = localStorage.getItem('tipoUsuario');\r\n        const NombreUsuario = localStorage.getItem('NombreUsuario'); \r\n        // Devuelve el usuario si todos los valores están presentes\r\n        return token && userId && tipoUsuario ? { token, userId, tipoUsuario, NombreUsuario } : null;\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Esta función verifica si el usuario actualmente en el estado es diferente al usuario almacenado localmente\r\n        const checkUser = () => {\r\n            const token = localStorage.getItem('token');\r\n            const userId = localStorage.getItem('userId');\r\n            const tipoUsuario = localStorage.getItem('tipoUsuario');\r\n            \r\n            // Comprueba si hay alguna diferencia y, de ser así, actualiza el estado\r\n            if (token && userId && tipoUsuario && (usuario?.userId !== userId || usuario?.token !== token || usuario?.tipoUsuario !== tipoUsuario)) {\r\n                setUsuario({\r\n                    userId,\r\n                    tipoUsuario,\r\n                    token\r\n                });\r\n            }\r\n        };\r\n\r\n        // Llama a la función checkUser cuando el componente se monta\r\n        checkUser();\r\n    }, []);\r\n\r\n    const login = (datosUsuario) => {\r\n        localStorage.setItem('token', datosUsuario.token);\r\n        localStorage.setItem('userId', datosUsuario.userId);\r\n        localStorage.setItem('tipoUsuario', datosUsuario.tipoUsuario);\r\n        localStorage.setItem('NombreUsuario', datosUsuario.NombreUsuario); \r\n        \r\n        setUsuario({\r\n            userId: datosUsuario.userId,\r\n            tipoUsuario: datosUsuario.tipoUsuario,\r\n            token: datosUsuario.token,\r\n            NombreUsuario: datosUsuario.NombreUsuario \r\n        });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('tipoUsuario');\r\n        setUsuario(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ usuario, login, logout, setUsuario }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}