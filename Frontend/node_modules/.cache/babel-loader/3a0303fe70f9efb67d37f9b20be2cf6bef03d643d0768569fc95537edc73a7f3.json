{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\pages\\\\GestionProductos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getImageUrl = imageName => {\n  return `http://localhost:5000/${imageName}`;\n};\nconst GestionProductos = () => {\n  _s();\n  const [productos, setProductos] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const obtenerProductos = async () => {\n      // Asegúrate de que hay un ID de usuario y un token antes de hacer la solicitud\n      const userId = localStorage.getItem('userId');\n      const token = localStorage.getItem('token');\n      if (!userId || !token) {\n        setError('No se ha iniciado sesión o falta la información del usuario.');\n        return; // Salir temprano si no hay userId o token\n      }\n\n      try {\n        const headers = {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        };\n        const response = await axios.get(`http://localhost:5000/api/ObtenerProductos/${userId}`, {\n          headers\n        });\n\n        // Asegúrate de que la estructura de datos es correcta\n        if (response.data && Array.isArray(response.data)) {\n          setProductos(response.data);\n        } else {\n          throw new Error(\"Formato de respuesta inesperado\");\n        }\n      } catch (err) {\n        setError('Error al obtener los productos: ' + err.message);\n        console.error(err);\n      }\n    };\n    obtenerProductos();\n  }, []);\n  const actualizarVariantes = async (productoId, variantes) => {\n    try {\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n      const body = {\n        producto_id: productoId,\n        variantes\n      };\n      await axios.put('http://localhost:5000/api/actualizarVariante', body, {\n        headers\n      });\n      // Aquí puedes actualizar el estado de tus productos si es necesario\n    } catch (err) {\n      setError('Error al actualizar variantes');\n      console.error(err);\n    }\n  };\n\n  // Renderiza los productos y un formulario para actualizar las cantidades\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Productos del Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), Array.isArray(productos) && productos.map(producto => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: producto.Nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: producto.Imagen,\n        alt: producto.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          // Lógica para recoger los valores de los inputs y llamar a actualizarVariantes\n        },\n        children: [producto.variantes && producto.variantes.map((variante, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Talla \", variante.talla, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            defaultValue: variante.cantidad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Actualizar Cantidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, producto.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(GestionProductos, \"BUnm3xfSilozYnqf7eKL5XTZusc=\");\n_c = GestionProductos;\nexport default GestionProductos;\nvar _c;\n$RefreshReg$(_c, \"GestionProductos\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","getImageUrl","imageName","GestionProductos","_s","productos","setProductos","error","setError","obtenerProductos","userId","localStorage","getItem","token","headers","response","get","data","Array","isArray","Error","err","message","console","actualizarVariantes","productoId","variantes","body","producto_id","put","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","producto","Nombre","src","Imagen","alt","nombre","onSubmit","e","preventDefault","variante","index","talla","type","defaultValue","cantidad","Id","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/pages/GestionProductos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst getImageUrl = (imageName) => {\r\n  return `http://localhost:5000/${imageName}`;\r\n};\r\nconst GestionProductos = () => {\r\n  const [productos, setProductos] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const obtenerProductos = async () => {\r\n      // Asegúrate de que hay un ID de usuario y un token antes de hacer la solicitud\r\n      const userId = localStorage.getItem('userId');\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!userId || !token) {\r\n        setError('No se ha iniciado sesión o falta la información del usuario.');\r\n        return; // Salir temprano si no hay userId o token\r\n      }\r\n\r\n      try {\r\n        const headers = {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`http://localhost:5000/api/ObtenerProductos/${userId}`, { headers });\r\n\r\n        // Asegúrate de que la estructura de datos es correcta\r\n        if (response.data && Array.isArray(response.data)) {\r\n          setProductos(response.data);\r\n        } else {\r\n          throw new Error(\"Formato de respuesta inesperado\");\r\n        }\r\n      } catch (err) {\r\n        setError('Error al obtener los productos: ' + err.message);\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    obtenerProductos();\r\n  }, []); \r\n\r\n  const actualizarVariantes = async (productoId, variantes) => {\r\n    try {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      };\r\n\r\n      const body = {\r\n        producto_id: productoId,\r\n        variantes\r\n      };\r\n\r\n      await axios.put('http://localhost:5000/api/actualizarVariante', body, { headers });\r\n      // Aquí puedes actualizar el estado de tus productos si es necesario\r\n    } catch (err) {\r\n      setError('Error al actualizar variantes');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Renderiza los productos y un formulario para actualizar las cantidades\r\n  return (\r\n    <div>\r\n      <h1>Productos del Usuario</h1>\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      {Array.isArray(productos) && productos.map((producto) => (\r\n        <div key={producto.Id}>\r\n          <h2>{producto.Nombre}</h2>\r\n          <img src={producto.Imagen} alt={producto.nombre} />\r\n          <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            // Lógica para recoger los valores de los inputs y llamar a actualizarVariantes\r\n          }}>\r\n            {producto.variantes && producto.variantes.map((variante, index) => (\r\n              <div key={index}>\r\n                <label>Talla {variante.talla}:</label>\r\n                <input type=\"number\" defaultValue={variante.cantidad} />\r\n              </div>\r\n            ))}\r\n            <button type=\"submit\">Actualizar Cantidades</button>\r\n          </form>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GestionProductos;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}