{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Crea un contexto para la autenticación.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\n\n// Usa este hook personalizado para acceder al contexto de autenticación.\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Este es tu proveedor de autenticación que combina la lógica de autenticación de admin y usuario general.\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Estado para la autenticación del administrador.\n  const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(false);\n  // Estado para la autenticación del usuario general.\n  const [isUserAuthenticated, setIsUserAuthenticated] = useState(false);\n\n  // Efecto para verificar la autenticación del administrador.\n  useEffect(() => {\n    const adminToken = localStorage.getItem('adminToken');\n    setIsAdminAuthenticated(!!adminToken);\n  }, []);\n\n  // Efecto para verificar la autenticación del usuario general.\n  useEffect(() => {\n    const userToken = localStorage.getItem('authToken');\n    setIsUserAuthenticated(!!userToken);\n  }, []);\n\n  // Función para iniciar sesión como administrador.\n  const adminLogin = token => {\n    localStorage.setItem('adminToken', token);\n    setIsAdminAuthenticated(true);\n  };\n\n  // Función para cerrar sesión como administrador.\n  const adminLogout = () => {\n    localStorage.removeItem('adminToken');\n    setIsAdminAuthenticated(false);\n  };\n\n  // Función para iniciar sesión como usuario general.\n  const userLogin = token => {\n    localStorage.setItem('authToken', token);\n    setIsUserAuthenticated(true);\n  };\n\n  // Función para cerrar sesión como usuario general.\n  const userLogout = () => {\n    localStorage.removeItem('authToken');\n    setIsUserAuthenticated(false);\n  };\n\n  // El valor del contexto proporciona tanto las funciones de autenticación como los estados de autenticación.\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAdminAuthenticated,\n      isUserAuthenticated,\n      adminLogin,\n      adminLogout,\n      userLogin,\n      userLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"FTNp/ZsZJYtzAisbJ4g3TFPh9FA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAdminAuthenticated","setIsAdminAuthenticated","isUserAuthenticated","setIsUserAuthenticated","adminToken","localStorage","getItem","userToken","adminLogin","token","setItem","adminLogout","removeItem","userLogin","userLogout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\n// Crea un contexto para la autenticación.\r\nconst AuthContext = createContext({});\r\n\r\n// Usa este hook personalizado para acceder al contexto de autenticación.\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Este es tu proveedor de autenticación que combina la lógica de autenticación de admin y usuario general.\r\nexport const AuthProvider = ({ children }) => {\r\n    // Estado para la autenticación del administrador.\r\n    const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(false);\r\n    // Estado para la autenticación del usuario general.\r\n    const [isUserAuthenticated, setIsUserAuthenticated] = useState(false);\r\n\r\n    // Efecto para verificar la autenticación del administrador.\r\n    useEffect(() => {\r\n        const adminToken = localStorage.getItem('adminToken');\r\n        setIsAdminAuthenticated(!!adminToken);\r\n    }, []);\r\n\r\n    // Efecto para verificar la autenticación del usuario general.\r\n    useEffect(() => {\r\n        const userToken = localStorage.getItem('authToken');\r\n        setIsUserAuthenticated(!!userToken);\r\n    }, []);\r\n\r\n    // Función para iniciar sesión como administrador.\r\n    const adminLogin = (token) => {\r\n        localStorage.setItem('adminToken', token);\r\n        setIsAdminAuthenticated(true);\r\n    };\r\n\r\n    // Función para cerrar sesión como administrador.\r\n    const adminLogout = () => {\r\n        localStorage.removeItem('adminToken');\r\n        setIsAdminAuthenticated(false);\r\n    };\r\n\r\n    // Función para iniciar sesión como usuario general.\r\n    const userLogin = (token) => {\r\n        localStorage.setItem('authToken', token);\r\n        setIsUserAuthenticated(true);\r\n    };\r\n\r\n    // Función para cerrar sesión como usuario general.\r\n    const userLogout = () => {\r\n        localStorage.removeItem('authToken');\r\n        setIsUserAuthenticated(false);\r\n    };\r\n\r\n    // El valor del contexto proporciona tanto las funciones de autenticación como los estados de autenticación.\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            isAdminAuthenticated,\r\n            isUserAuthenticated,\r\n            adminLogin,\r\n            adminLogout,\r\n            userLogin,\r\n            userLogout\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvE;EACA,MAAM,CAACa,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACAE,SAAS,CAAC,MAAM;IACZ,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrDL,uBAAuB,CAAC,CAAC,CAACG,UAAU,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAb,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnDH,sBAAsB,CAAC,CAAC,CAACI,SAAS,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC1BJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAED,KAAK,CAAC;IACzCR,uBAAuB,CAAC,IAAI,CAAC;EACjC,CAAC;;EAED;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACtBN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrCX,uBAAuB,CAAC,KAAK,CAAC;EAClC,CAAC;;EAED;EACA,MAAMY,SAAS,GAAIJ,KAAK,IAAK;IACzBJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAED,KAAK,CAAC;IACxCN,sBAAsB,CAAC,IAAI,CAAC;EAChC,CAAC;;EAED;EACA,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACrBT,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;IACpCT,sBAAsB,CAAC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,oBACIV,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MACzBhB,oBAAoB;MACpBE,mBAAmB;MACnBM,UAAU;MACVG,WAAW;MACXE,SAAS;MACTC;IACJ,CAAE;IAAAhB,QAAA,EACGA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACrB,GAAA,CAvDWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}