{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\Mensajes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mensajes() {\n  _s();\n  const {\n    usuario\n  } = useContext(AuthContext);\n  const [mensajesEnviados, setMensajesEnviados] = useState([]);\n  const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajeAResponder, setMensajeAResponder] = useState(null);\n\n  // Usamos useRef para saber si el componente está montado\n  const isMounted = useRef(true);\n\n  // Cargamos los mensajes una vez y configuramos un intervalo\n  useEffect(() => {\n    // Definimos la función dentro del efecto para evitar recrearla en cada render\n    const cargarMensajes = async () => {\n      if (usuario && usuario.userId) {\n        setIsLoading(true);\n        try {\n          const enviadosResponse = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\n          const recibidosResponse = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\n          // Solo actualizamos el estado si el componente está montado\n          if (isMounted.current) {\n            setMensajesEnviados(enviadosResponse.data);\n            setMensajesRecibidos(recibidosResponse.data);\n          }\n        } catch (error) {\n          console.error('Error al obtener mensajes', error);\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      }\n    };\n    cargarMensajes();\n\n    // Configuramos el intervalo para cargar mensajes cada minuto\n    const intervalId = usuario && usuario.userId ? setInterval(cargarMensajes, 60000) : null;\n\n    // Limpiamos el intervalo y marcamos que el componente se ha desmontado cuando este se desmonte\n    return () => {\n      clearInterval(intervalId);\n      isMounted.current = false;\n    };\n  }, [usuario]);\n  const responderMensaje = (mensajeId, receptorId) => {\n    if (nuevoMensaje.trim() && mensajeId) {\n      axios.post('http://localhost:5000/api/mensajes/crear', {\n        emisorId: usuario.userId,\n        receptorId: receptorId,\n        mensaje: nuevoMensaje,\n        productoId: mensajeAResponder.Producto_Id\n      }).then(response => {\n        setNuevoMensaje('');\n        setMensajeAResponder(null);\n        cargarMensajes(); // Considera recargar los mensajes después de enviar una respuesta\n      }).catch(error => console.error('Error al responder mensaje', error));\n    }\n  };\n  const marcarComoLeido = idMensaje => {\n    axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`).then(response => {\n      cargarMensajes(); // Considera recargar los mensajes después de marcar como leído\n    }).catch(error => console.error('Error al marcar mensaje como leído', error));\n  };\n  const seleccionarMensajeParaResponder = mensaje => {\n    setMensajeAResponder(mensaje);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Mensajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando mensajes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }, this), mensajeAResponder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: nuevoMensaje,\n        onChange: e => setNuevoMensaje(e.target.value),\n        placeholder: \"Escribe tu respuesta aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId),\n        children: \"Responder Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), !isLoading && mensajesRecibidos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No has recibido mensajes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 62\n    }, this), !isLoading && mensajesRecibidos.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"De:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 50\n          }, this), \" \", mensaje.Emisor_Id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mensaje:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 50\n          }, this), \" \", mensaje.Mensaje]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => marcarComoLeido(mensaje.Id),\n          children: \"Marcar como Le\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => seleccionarMensajeParaResponder(mensaje),\n          children: \"Responder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, mensaje.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Mensajes, \"1QLRIZwthfB3xIOEF7kdoDXHC3w=\");\n_c = Mensajes;\nexport default Mensajes;\nvar _c;\n$RefreshReg$(_c, \"Mensajes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","axios","AuthContext","jsxDEV","_jsxDEV","Mensajes","_s","usuario","mensajesEnviados","setMensajesEnviados","mensajesRecibidos","setMensajesRecibidos","isLoading","setIsLoading","nuevoMensaje","setNuevoMensaje","mensajeAResponder","setMensajeAResponder","isMounted","cargarMensajes","userId","enviadosResponse","get","recibidosResponse","current","data","error","console","intervalId","setInterval","clearInterval","responderMensaje","mensajeId","receptorId","trim","post","emisorId","mensaje","productoId","Producto_Id","then","response","catch","marcarComoLeido","idMensaje","put","seleccionarMensajeParaResponder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","id","length","map","Emisor_Id","Mensaje","Id","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/Mensajes.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Mensajes() {\r\n    const { usuario } = useContext(AuthContext);\r\n    const [mensajesEnviados, setMensajesEnviados] = useState([]);\r\n    const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n    const [mensajeAResponder, setMensajeAResponder] = useState(null);\r\n\r\n    // Usamos useRef para saber si el componente está montado\r\n    const isMounted = useRef(true);\r\n\r\n    // Cargamos los mensajes una vez y configuramos un intervalo\r\n    useEffect(() => {\r\n        // Definimos la función dentro del efecto para evitar recrearla en cada render\r\n        const cargarMensajes = async () => {\r\n            if (usuario && usuario.userId) {\r\n                setIsLoading(true);\r\n                try {\r\n                    const enviadosResponse = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\r\n                    const recibidosResponse = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\r\n                    // Solo actualizamos el estado si el componente está montado\r\n                    if (isMounted.current) {\r\n                        setMensajesEnviados(enviadosResponse.data);\r\n                        setMensajesRecibidos(recibidosResponse.data);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error al obtener mensajes', error);\r\n                } finally {\r\n                    if (isMounted.current) {\r\n                        setIsLoading(false);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        cargarMensajes();\r\n\r\n        // Configuramos el intervalo para cargar mensajes cada minuto\r\n        const intervalId = usuario && usuario.userId ? setInterval(cargarMensajes, 60000) : null;\r\n\r\n        // Limpiamos el intervalo y marcamos que el componente se ha desmontado cuando este se desmonte\r\n        return () => {\r\n            clearInterval(intervalId);\r\n            isMounted.current = false;\r\n        };\r\n    }, [usuario]); \r\n\r\n    const responderMensaje = (mensajeId, receptorId) => {\r\n        if (nuevoMensaje.trim() && mensajeId) {\r\n            axios.post('http://localhost:5000/api/mensajes/crear', {\r\n                emisorId: usuario.userId,\r\n                receptorId: receptorId,\r\n                mensaje: nuevoMensaje,\r\n                productoId: mensajeAResponder.Producto_Id\r\n            })\r\n            .then(response => {\r\n                setNuevoMensaje('');\r\n                setMensajeAResponder(null);\r\n                cargarMensajes(); // Considera recargar los mensajes después de enviar una respuesta\r\n            })\r\n            .catch(error => console.error('Error al responder mensaje', error));\r\n        }\r\n    };\r\n\r\n    const marcarComoLeido = (idMensaje) => {\r\n        axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`)\r\n            .then(response => {\r\n                cargarMensajes(); // Considera recargar los mensajes después de marcar como leído\r\n            })\r\n            .catch(error => console.error('Error al marcar mensaje como leído', error));\r\n    };\r\n\r\n    const seleccionarMensajeParaResponder = (mensaje) => {\r\n        setMensajeAResponder(mensaje);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"my-3\">Mensajes</h2>\r\n            {isLoading && <p>Cargando mensajes...</p>}\r\n\r\n            {/* UI para responder a un mensaje */}\r\n            {mensajeAResponder && (\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={nuevoMensaje}\r\n                        onChange={(e) => setNuevoMensaje(e.target.value)}\r\n                        placeholder=\"Escribe tu respuesta aquí...\"\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary mt-2\"\r\n                        onClick={() => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId)}>\r\n                        Responder Mensaje\r\n                    </button>\r\n                </div>\r\n\r\n            )}\r\n            {/* Mostrar mensajes recibidos */}\r\n            {!isLoading && mensajesRecibidos.length === 0 && <p>No has recibido mensajes.</p>}\r\n            {!isLoading && mensajesRecibidos.map((mensaje) => (\r\n                <div key={mensaje.Id} className=\"card mb-2\"> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>De:</strong> {mensaje.Emisor_Id}</p> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                        <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.Mensaje}</p> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                        <button className=\"btn btn-secondary\" onClick={() => marcarComoLeido(mensaje.Id)}>Marcar como Leído</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => seleccionarMensajeParaResponder(mensaje)}>Responder</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mensajes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAQ,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EAC3C,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAMqB,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACZ;IACA,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIZ,OAAO,IAAIA,OAAO,CAACa,MAAM,EAAE;QAC3BP,YAAY,CAAC,IAAI,CAAC;QAClB,IAAI;UACA,MAAMQ,gBAAgB,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,+CAA8Cf,OAAO,CAACa,MAAO,EAAC,CAAC;UACzG,MAAMG,iBAAiB,GAAG,MAAMtB,KAAK,CAACqB,GAAG,CAAE,8CAA6Cf,OAAO,CAACa,MAAO,EAAC,CAAC;UACzG;UACA,IAAIF,SAAS,CAACM,OAAO,EAAE;YACnBf,mBAAmB,CAACY,gBAAgB,CAACI,IAAI,CAAC;YAC1Cd,oBAAoB,CAACY,iBAAiB,CAACE,IAAI,CAAC;UAChD;QACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACrD,CAAC,SAAS;UACN,IAAIR,SAAS,CAACM,OAAO,EAAE;YACnBX,YAAY,CAAC,KAAK,CAAC;UACvB;QACJ;MACJ;IACJ,CAAC;IAEDM,cAAc,CAAC,CAAC;;IAEhB;IACA,MAAMS,UAAU,GAAGrB,OAAO,IAAIA,OAAO,CAACa,MAAM,GAAGS,WAAW,CAACV,cAAc,EAAE,KAAK,CAAC,GAAG,IAAI;;IAExF;IACA,OAAO,MAAM;MACTW,aAAa,CAACF,UAAU,CAAC;MACzBV,SAAS,CAACM,OAAO,GAAG,KAAK;IAC7B,CAAC;EACL,CAAC,EAAE,CAACjB,OAAO,CAAC,CAAC;EAEb,MAAMwB,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IAChD,IAAInB,YAAY,CAACoB,IAAI,CAAC,CAAC,IAAIF,SAAS,EAAE;MAClC/B,KAAK,CAACkC,IAAI,CAAC,0CAA0C,EAAE;QACnDC,QAAQ,EAAE7B,OAAO,CAACa,MAAM;QACxBa,UAAU,EAAEA,UAAU;QACtBI,OAAO,EAAEvB,YAAY;QACrBwB,UAAU,EAAEtB,iBAAiB,CAACuB;MAClC,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;QACd1B,eAAe,CAAC,EAAE,CAAC;QACnBE,oBAAoB,CAAC,IAAI,CAAC;QAC1BE,cAAc,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CACDuB,KAAK,CAAChB,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IACvE;EACJ,CAAC;EAED,MAAMiB,eAAe,GAAIC,SAAS,IAAK;IACnC3C,KAAK,CAAC4C,GAAG,CAAE,mDAAkDD,SAAU,EAAC,CAAC,CACpEJ,IAAI,CAACC,QAAQ,IAAI;MACdtB,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CACDuB,KAAK,CAAChB,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC,CAAC;EACnF,CAAC;EAED,MAAMoB,+BAA+B,GAAIT,OAAO,IAAK;IACjDpB,oBAAoB,CAACoB,OAAO,CAAC;EACjC,CAAC;EAED,oBACIjC,OAAA;IAAK2C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB5C,OAAA;MAAI2C,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCxC,SAAS,iBAAIR,OAAA;MAAA4C,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAGxCpC,iBAAiB,iBACdZ,OAAA;MAAK2C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjB5C,OAAA;QACI2C,SAAS,EAAC,cAAc;QACxBM,KAAK,EAAEvC,YAAa;QACpBwC,QAAQ,EAAGC,CAAC,IAAKxC,eAAe,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,WAAW,EAAC;MAA8B;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFhD,OAAA;QACI2C,SAAS,EAAC,sBAAsB;QAChCW,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAACf,iBAAiB,CAAC2C,EAAE,EAAE3C,iBAAiB,CAACiB,UAAU,CAAE;QAAAe,QAAA,EAAC;MAEzF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAER,EAEA,CAACxC,SAAS,IAAIF,iBAAiB,CAACkD,MAAM,KAAK,CAAC,iBAAIxD,OAAA;MAAA4C,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChF,CAACxC,SAAS,IAAIF,iBAAiB,CAACmD,GAAG,CAAExB,OAAO,iBACzCjC,OAAA;MAAsB2C,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,GAAC,eACzC5C,OAAA;QAAK2C,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtB5C,OAAA;UAAG2C,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAAC5C,OAAA;YAAA4C,QAAA,EAAQ;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACf,OAAO,CAACyB,SAAS;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eACtEhD,OAAA;UAAG2C,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAAC5C,OAAA;YAAA4C,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACf,OAAO,CAAC0B,OAAO;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eACzEhD,OAAA;UAAQ2C,SAAS,EAAC,mBAAmB;UAACW,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACN,OAAO,CAAC2B,EAAE,CAAE;UAAAhB,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5GhD,OAAA;UAAQ2C,SAAS,EAAC,iBAAiB;UAACW,OAAO,EAAEA,CAAA,KAAMZ,+BAA+B,CAACT,OAAO,CAAE;UAAAW,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9G,CAAC;IAAA,GANAf,OAAO,CAAC2B,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOf,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC9C,EAAA,CAhHQD,QAAQ;AAAA4D,EAAA,GAAR5D,QAAQ;AAkHjB,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}