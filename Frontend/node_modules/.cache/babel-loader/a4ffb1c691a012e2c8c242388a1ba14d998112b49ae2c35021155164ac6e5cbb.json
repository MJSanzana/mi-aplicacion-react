{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\Mensajes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mensajes() {\n  _s();\n  const {\n    usuario\n  } = useContext(AuthContext);\n  const [mensajesEnviados, setMensajesEnviados] = useState([]);\n  const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const isMounted = useRef(true);\n\n  // Función para cargar mensajes\n  const cargarMensajes = async () => {\n    if (usuario !== null && usuario !== void 0 && usuario.userId && isMounted.current) {\n      setIsLoading(true);\n      try {\n        const enviados = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\n        const recibidos = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\n        if (isMounted.current) {\n          setMensajesEnviados(enviados.data);\n          setMensajesRecibidos(recibidos.data);\n        }\n      } catch (error) {\n        console.error('Error al obtener mensajes', error);\n      } finally {\n        if (isMounted.current) {\n          setIsLoading(false);\n        }\n      }\n    }\n  };\n\n  // Efecto para cargar mensajes\n  useEffect(() => {\n    cargarMensajes();\n    const interval = usuario !== null && usuario !== void 0 && usuario.userId ? setInterval(cargarMensajes, 60000) : null;\n    return () => {\n      clearInterval(interval);\n      isMounted.current = false;\n    };\n  }, [usuario]);\n  const responderMensaje = () => {\n    // Asegúrate de que mensajeAResponder esté definido antes de intentar usarlo\n    if (nuevoMensaje.trim() && mensajeAResponder) {\n      axios.post('http://localhost:5000/api/mensajes/crear', {\n        emisorId: usuario.userId,\n        receptorId: mensajeAResponder.receptorId,\n        // Asegúrate de que receptorId esté definido en mensajeAResponder\n        mensaje: nuevoMensaje,\n        productoId: mensajeAResponder.productoId // Asegúrate de que productoId esté definido en mensajeAResponder\n      }).then(response => {\n        // Lógica de respuesta exitosa\n      }).catch(error => {\n        console.error('Error al responder mensaje', error);\n      });\n    }\n  };\n  const marcarComoLeido = idMensaje => {\n    axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`).then(response => {\n      cargarMensajes(); // Considera recargar los mensajes después de marcar como leído\n    }).catch(error => console.error('Error al marcar mensaje como leído', error));\n  };\n  const seleccionarMensajeParaResponder = mensaje => {\n    setMensajeAResponder(mensaje);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Mensajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando mensajes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }, this), mensajeAResponder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: nuevoMensaje,\n        onChange: e => setNuevoMensaje(e.target.value),\n        placeholder: \"Escribe tu respuesta aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId),\n        children: \"Responder Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), !isLoading && mensajesRecibidos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No has recibido mensajes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 62\n    }, this), !isLoading && mensajesRecibidos.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"De:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 50\n          }, this), \" \", mensaje.Emisor_Id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mensaje:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 50\n          }, this), \" \", mensaje.Mensaje]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => marcarComoLeido(mensaje.Id),\n          children: \"Marcar como Le\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => seleccionarMensajeParaResponder(mensaje),\n          children: \"Responder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, mensaje.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Mensajes, \"R35Fxhuyht6xlvvejuKhbDU9rqU=\");\n_c = Mensajes;\nexport default Mensajes;\nvar _c;\n$RefreshReg$(_c, \"Mensajes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","axios","AuthContext","jsxDEV","_jsxDEV","Mensajes","_s","usuario","mensajesEnviados","setMensajesEnviados","mensajesRecibidos","setMensajesRecibidos","isLoading","setIsLoading","isMounted","cargarMensajes","userId","current","enviados","get","recibidos","data","error","console","interval","setInterval","clearInterval","responderMensaje","nuevoMensaje","trim","mensajeAResponder","post","emisorId","receptorId","mensaje","productoId","then","response","catch","marcarComoLeido","idMensaje","put","seleccionarMensajeParaResponder","setMensajeAResponder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","setNuevoMensaje","target","placeholder","onClick","id","length","map","Emisor_Id","Mensaje","Id","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/Mensajes.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Mensajes() {\r\n    const { usuario } = useContext(AuthContext);\r\n    const [mensajesEnviados, setMensajesEnviados] = useState([]);\r\n    const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const isMounted = useRef(true);\r\n\r\n    // Función para cargar mensajes\r\n    const cargarMensajes = async () => {\r\n        if (usuario?.userId && isMounted.current) {\r\n            setIsLoading(true);\r\n            try {\r\n                const enviados = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\r\n                const recibidos = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\r\n                if (isMounted.current) {\r\n                    setMensajesEnviados(enviados.data);\r\n                    setMensajesRecibidos(recibidos.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener mensajes', error);\r\n            } finally {\r\n                if (isMounted.current) {\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Efecto para cargar mensajes\r\n    useEffect(() => {\r\n        cargarMensajes();\r\n        const interval = usuario?.userId ? setInterval(cargarMensajes, 60000) : null;\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n            isMounted.current = false;\r\n        };\r\n    }, [usuario]);\r\n\r\n    const responderMensaje = () => {\r\n        // Asegúrate de que mensajeAResponder esté definido antes de intentar usarlo\r\n        if (nuevoMensaje.trim() && mensajeAResponder) {\r\n          axios.post('http://localhost:5000/api/mensajes/crear', {\r\n            emisorId: usuario.userId,\r\n            receptorId: mensajeAResponder.receptorId, // Asegúrate de que receptorId esté definido en mensajeAResponder\r\n            mensaje: nuevoMensaje,\r\n            productoId: mensajeAResponder.productoId, // Asegúrate de que productoId esté definido en mensajeAResponder\r\n          })\r\n          .then(response => {\r\n            // Lógica de respuesta exitosa\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al responder mensaje', error);\r\n          });\r\n        }\r\n      };\r\n\r\n    const marcarComoLeido = (idMensaje) => {\r\n        axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`)\r\n            .then(response => {\r\n                cargarMensajes(); // Considera recargar los mensajes después de marcar como leído\r\n            })\r\n            .catch(error => console.error('Error al marcar mensaje como leído', error));\r\n    };\r\n\r\n    const seleccionarMensajeParaResponder = (mensaje) => {\r\n        setMensajeAResponder(mensaje);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"my-3\">Mensajes</h2>\r\n            {isLoading && <p>Cargando mensajes...</p>}\r\n\r\n            {/* UI para responder a un mensaje */}\r\n            {mensajeAResponder && (\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={nuevoMensaje}\r\n                        onChange={(e) => setNuevoMensaje(e.target.value)}\r\n                        placeholder=\"Escribe tu respuesta aquí...\"\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary mt-2\"\r\n                        onClick={() => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId)}>\r\n                        Responder Mensaje\r\n                    </button>\r\n                </div>\r\n\r\n            )}\r\n            {/* Mostrar mensajes recibidos */}\r\n            {!isLoading && mensajesRecibidos.length === 0 && <p>No has recibido mensajes.</p>}\r\n            {!isLoading && mensajesRecibidos.map((mensaje) => (\r\n                <div key={mensaje.Id} className=\"card mb-2\"> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>De:</strong> {mensaje.Emisor_Id}</p> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                        <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.Mensaje}</p> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                        <button className=\"btn btn-secondary\" onClick={() => marcarComoLeido(mensaje.Id)}>Marcar como Leído</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => seleccionarMensajeParaResponder(mensaje)}>Responder</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mensajes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}