{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\pages\\\\GestionProductos.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst getImageUrl = imageName => {\n  return `http://localhost:5000/${imageName}`;\n};\nconst GestionProductos = () => {\n  const [productos, setProductos] = useState([]);\n  const [variantesModificadas, setVariantesModificadas] = useState({});\n  const [error, setError] = useState('');\n  const [updateSuccess, setUpdateSuccess] = useState('');\n  const [updateError, setUpdateError] = useState('');\n  const token = localStorage.getItem('token'); // Mueve el token aquí para usarlo en múltiples funciones\n\n  const obtenerProductos = async () => {\n    const userId = localStorage.getItem('userId');\n    if (!userId || !token) {\n      setError('No se ha iniciado sesión o falta la información del usuario.');\n      return;\n    }\n    try {\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n      const productosResponse = await axios.get(`http://localhost:5000/api/ObtenerProductos/${userId}`, {\n        headers\n      });\n      if (productosResponse.data && Array.isArray(productosResponse.data)) {\n        const productosConVariantes = await Promise.all(productosResponse.data.map(async producto => {\n          const variantes = await obtenerVariantesPorProducto(producto.Id);\n          return {\n            ...producto,\n            variantes\n          };\n        }));\n        setProductos(productosConVariantes);\n      } else {\n        throw new Error(\"Formato de respuesta inesperado\");\n      }\n    } catch (err) {\n      setError('Error al obtener los productos: ' + err.message);\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    obtenerProductos();\n  }, []);\n  const obtenerVariantesPorProducto = async productoId => {\n    try {\n      const variantesResponse = await axios.get(`http://localhost:5000/api/obtenerVariantesPorProductoId/${productoId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return variantesResponse.data;\n    } catch (err) {\n      setError('Error al obtener las variantes: ' + err.message);\n      console.error(err);\n      return [];\n    }\n  };\n  const handleCantidadChange = (productoId, talla, nuevaCantidad) => {\n    setVariantesModificadas(prevState => ({\n      ...prevState,\n      [`${productoId}-${talla}`]: nuevaCantidad\n    }));\n  };\n  const actualizarVariantes = async (e, productoId) => {\n    e.preventDefault();\n    setUpdateSuccess('');\n    setUpdateError('');\n\n    // Obten los cambios de variantes específicos para este producto\n    const variantesParaActualizar = Object.entries(variantesModificadas).filter(([key]) => key.startsWith(`${productoId}-`)).map(([key, cantidad]) => {\n      const talla = key.split('-')[1];\n      return {\n        producto_id: productoId,\n        talla,\n        cantidad: parseInt(cantidad)\n      };\n    });\n    try {\n      // Si hay variantes para actualizar, realiza la solicitud PUT para cada una\n      if (variantesParaActualizar.length > 0) {\n        const headers = {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        };\n\n        // Actualiza las variantes una por una\n        for (const variante of variantesParaActualizar) {\n          await axios.put('http://localhost:5000/api/actualizarVariante', variante, {\n            headers\n          });\n        }\n        setUpdateSuccess('Variantes actualizadas correctamente.');\n        setVariantesModificadas({});\n\n        // Actualiza la lista de productos para reflejar los cambios\n        await obtenerProductos();\n      } else {\n        // Si no hay cambios, no hacer nada o mostrar un mensaje\n        setUpdateError('No hay cambios en las variantes para actualizar.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setUpdateError('Error al actualizar variantes: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    }\n  };\n\n  // Renderiza los productos y un formulario para actualizar las cantidades\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Productos del Usuario\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, error), updateError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, updateError), updateSuccess && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, updateSuccess), productos.map(producto => /*#__PURE__*/React.createElement(\"div\", {\n    key: producto.Id,\n    className: \"card mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://localhost:5000/${producto.Imagen}`,\n    alt: producto.Nombre,\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, producto.Nombre), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, producto.Descripcion), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"G\\xE9nero: \", producto.Genero), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Precio: $\", producto.Precio), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => actualizarVariantes(e, producto.Id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }, \"Talla\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 27\n    }\n  }, \"Cantidad Actual\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 27\n    }\n  }, \"Actualizar Cantidad\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, producto.variantes.map((variante, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, variante.Talla), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, variante.Cantidad), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    defaultValue: variante.Cantidad,\n    onChange: e => handleCantidadChange(producto.Id, variante.Talla, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 31\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, \"Actualizar Cantidades\"))))))));\n};\nexport default GestionProductos;","map":{"version":3,"names":["React","useState","useEffect","axios","getImageUrl","imageName","GestionProductos","productos","setProductos","variantesModificadas","setVariantesModificadas","error","setError","updateSuccess","setUpdateSuccess","updateError","setUpdateError","token","localStorage","getItem","obtenerProductos","userId","headers","productosResponse","get","data","Array","isArray","productosConVariantes","Promise","all","map","producto","variantes","obtenerVariantesPorProducto","Id","Error","err","message","console","productoId","variantesResponse","handleCantidadChange","talla","nuevaCantidad","prevState","actualizarVariantes","e","preventDefault","variantesParaActualizar","Object","entries","filter","key","startsWith","cantidad","split","producto_id","parseInt","length","variante","put","_err$response","_err$response$data","response","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","role","src","Imagen","alt","Nombre","Descripcion","Genero","Precio","onSubmit","scope","index","Talla","Cantidad","type","defaultValue","onChange","target","value"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/pages/GestionProductos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst getImageUrl = (imageName) => {\r\n  return `http://localhost:5000/${imageName}`;\r\n};\r\n\r\nconst GestionProductos = () => {\r\n  const [productos, setProductos] = useState([]);\r\n  const [variantesModificadas, setVariantesModificadas] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [updateSuccess, setUpdateSuccess] = useState('');\r\n  const [updateError, setUpdateError] = useState('');\r\n  const token = localStorage.getItem('token'); // Mueve el token aquí para usarlo en múltiples funciones\r\n\r\n  const obtenerProductos = async () => {\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (!userId || !token) {\r\n      setError('No se ha iniciado sesión o falta la información del usuario.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      };\r\n\r\n      const productosResponse = await axios.get(`http://localhost:5000/api/ObtenerProductos/${userId}`, { headers });\r\n      if (productosResponse.data && Array.isArray(productosResponse.data)) {\r\n        const productosConVariantes = await Promise.all(productosResponse.data.map(async (producto) => {\r\n          const variantes = await obtenerVariantesPorProducto(producto.Id);\r\n          return { ...producto, variantes };\r\n        }));\r\n        setProductos(productosConVariantes);\r\n      } else {\r\n        throw new Error(\"Formato de respuesta inesperado\");\r\n      }\r\n    } catch (err) {\r\n      setError('Error al obtener los productos: ' + err.message);\r\n      console.error(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    obtenerProductos();\r\n  }, []);\r\n    const obtenerVariantesPorProducto = async (productoId) => {\r\n      try {\r\n        const variantesResponse = await axios.get(`http://localhost:5000/api/obtenerVariantesPorProductoId/${productoId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        return variantesResponse.data;\r\n      } catch (err) {\r\n        setError('Error al obtener las variantes: ' + err.message);\r\n        console.error(err);\r\n        return [];\r\n      }\r\n    };\r\n\r\n  const handleCantidadChange = (productoId, talla, nuevaCantidad) => {\r\n    setVariantesModificadas(prevState => ({\r\n      ...prevState,\r\n      [`${productoId}-${talla}`]: nuevaCantidad\r\n    }));\r\n  };\r\n  const actualizarVariantes = async (e, productoId) => {\r\n    e.preventDefault();\r\n    setUpdateSuccess('');\r\n    setUpdateError('');\r\n  \r\n    // Obten los cambios de variantes específicos para este producto\r\n    const variantesParaActualizar = Object.entries(variantesModificadas)\r\n      .filter(([key]) => key.startsWith(`${productoId}-`))\r\n      .map(([key, cantidad]) => {\r\n        const talla = key.split('-')[1];\r\n        return { producto_id: productoId, talla, cantidad: parseInt(cantidad) };\r\n      });\r\n  \r\n    try {\r\n      // Si hay variantes para actualizar, realiza la solicitud PUT para cada una\r\n      if (variantesParaActualizar.length > 0) {\r\n        const headers = {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        };\r\n  \r\n        // Actualiza las variantes una por una\r\n        for (const variante of variantesParaActualizar) {\r\n          await axios.put('http://localhost:5000/api/actualizarVariante', variante, { headers });\r\n        }\r\n  \r\n        setUpdateSuccess('Variantes actualizadas correctamente.');\r\n        setVariantesModificadas({});\r\n  \r\n        // Actualiza la lista de productos para reflejar los cambios\r\n        await obtenerProductos();\r\n      } else {\r\n        // Si no hay cambios, no hacer nada o mostrar un mensaje\r\n        setUpdateError('No hay cambios en las variantes para actualizar.');\r\n      }\r\n    } catch (err) {\r\n      setUpdateError('Error al actualizar variantes: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n  \r\n  // Renderiza los productos y un formulario para actualizar las cantidades\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1 className=\"mb-4\">Productos del Usuario</h1>\r\n      {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n      {updateError && <div className=\"alert alert-danger\" role=\"alert\">{updateError}</div>}\r\n      {updateSuccess && <div className=\"alert alert-success\" role=\"alert\">{updateSuccess}</div>}\r\n      {productos.map((producto) => (\r\n        <div key={producto.Id} className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2 mb-3\">\r\n                <img src={`http://localhost:5000/${producto.Imagen}`} alt={producto.Nombre} className=\"img-fluid\" />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <h4 className=\"card-title\">{producto.Nombre}</h4>\r\n                <p className=\"card-text\">{producto.Descripcion}</p>\r\n                <p className=\"card-text\">Género: {producto.Genero}</p>\r\n                <p className=\"card-text\">Precio: ${producto.Precio}</p>\r\n                <form onSubmit={(e) => actualizarVariantes(e, producto.Id)}>\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">Talla</th>\r\n                          <th scope=\"col\">Cantidad Actual</th>\r\n                          <th scope=\"col\">Actualizar Cantidad</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {producto.variantes.map((variante, index) => (\r\n                          <tr key={index}>\r\n                            <td>{variante.Talla}</td>\r\n                            <td>{variante.Cantidad}</td>\r\n                            <td>\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                defaultValue={variante.Cantidad}\r\n                                onChange={(e) => handleCantidadChange(producto.Id, variante.Talla, e.target.value)}\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Actualizar Cantidades</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GestionProductos;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAIC,SAAS,IAAK;EACjC,OAAQ,yBAAwBA,SAAU,EAAC;AAC7C,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,MAAM,GAAGH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,IAAI,CAACE,MAAM,IAAI,CAACJ,KAAK,EAAE;MACrBL,QAAQ,CAAC,8DAA8D,CAAC;MACxE;IACF;IAEA,IAAI;MACF,MAAMU,OAAO,GAAG;QACd,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASL,KAAM;MACnC,CAAC;MAED,MAAMM,iBAAiB,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,8CAA6CH,MAAO,EAAC,EAAE;QAAEC;MAAQ,CAAC,CAAC;MAC9G,IAAIC,iBAAiB,CAACE,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACJ,iBAAiB,CAACE,IAAI,CAAC,EAAE;QACnE,MAAMG,qBAAqB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,iBAAiB,CAACE,IAAI,CAACM,GAAG,CAAC,MAAOC,QAAQ,IAAK;UAC7F,MAAMC,SAAS,GAAG,MAAMC,2BAA2B,CAACF,QAAQ,CAACG,EAAE,CAAC;UAChE,OAAO;YAAE,GAAGH,QAAQ;YAAEC;UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;QACHzB,YAAY,CAACoB,qBAAqB,CAAC;MACrC,CAAC,MAAM;QACL,MAAM,IAAIQ,KAAK,CAAC,iCAAiC,CAAC;MACpD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZzB,QAAQ,CAAC,kCAAkC,GAAGyB,GAAG,CAACC,OAAO,CAAC;MAC1DC,OAAO,CAAC5B,KAAK,CAAC0B,GAAG,CAAC;IACpB;EACF,CAAC;EACDnC,SAAS,CAAC,MAAM;IACdkB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACJ,MAAMc,2BAA2B,GAAG,MAAOM,UAAU,IAAK;IACxD,IAAI;MACF,MAAMC,iBAAiB,GAAG,MAAMtC,KAAK,CAACqB,GAAG,CAAE,2DAA0DgB,UAAW,EAAC,EAAE;QACjHlB,OAAO,EAAE;UACP,eAAe,EAAG,UAASL,KAAM;QACnC;MACF,CAAC,CAAC;MACF,OAAOwB,iBAAiB,CAAChB,IAAI;IAC/B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZzB,QAAQ,CAAC,kCAAkC,GAAGyB,GAAG,CAACC,OAAO,CAAC;MAC1DC,OAAO,CAAC5B,KAAK,CAAC0B,GAAG,CAAC;MAClB,OAAO,EAAE;IACX;EACF,CAAC;EAEH,MAAMK,oBAAoB,GAAGA,CAACF,UAAU,EAAEG,KAAK,EAAEC,aAAa,KAAK;IACjElC,uBAAuB,CAACmC,SAAS,KAAK;MACpC,GAAGA,SAAS;MACZ,CAAE,GAAEL,UAAW,IAAGG,KAAM,EAAC,GAAGC;IAC9B,CAAC,CAAC,CAAC;EACL,CAAC;EACD,MAAME,mBAAmB,GAAG,MAAAA,CAAOC,CAAC,EAAEP,UAAU,KAAK;IACnDO,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlC,gBAAgB,CAAC,EAAE,CAAC;IACpBE,cAAc,CAAC,EAAE,CAAC;;IAElB;IACA,MAAMiC,uBAAuB,GAAGC,MAAM,CAACC,OAAO,CAAC1C,oBAAoB,CAAC,CACjE2C,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,KAAKA,GAAG,CAACC,UAAU,CAAE,GAAEd,UAAW,GAAE,CAAC,CAAC,CACnDT,GAAG,CAAC,CAAC,CAACsB,GAAG,EAAEE,QAAQ,CAAC,KAAK;MACxB,MAAMZ,KAAK,GAAGU,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/B,OAAO;QAAEC,WAAW,EAAEjB,UAAU;QAAEG,KAAK;QAAEY,QAAQ,EAAEG,QAAQ,CAACH,QAAQ;MAAE,CAAC;IACzE,CAAC,CAAC;IAEJ,IAAI;MACF;MACA,IAAIN,uBAAuB,CAACU,MAAM,GAAG,CAAC,EAAE;QACtC,MAAMrC,OAAO,GAAG;UACd,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASL,KAAM;QACnC,CAAC;;QAED;QACA,KAAK,MAAM2C,QAAQ,IAAIX,uBAAuB,EAAE;UAC9C,MAAM9C,KAAK,CAAC0D,GAAG,CAAC,8CAA8C,EAAED,QAAQ,EAAE;YAAEtC;UAAQ,CAAC,CAAC;QACxF;QAEAR,gBAAgB,CAAC,uCAAuC,CAAC;QACzDJ,uBAAuB,CAAC,CAAC,CAAC,CAAC;;QAE3B;QACA,MAAMU,gBAAgB,CAAC,CAAC;MAC1B,CAAC,MAAM;QACL;QACAJ,cAAc,CAAC,kDAAkD,CAAC;MACpE;IACF,CAAC,CAAC,OAAOqB,GAAG,EAAE;MAAA,IAAAyB,aAAA,EAAAC,kBAAA;MACZ/C,cAAc,CAAC,iCAAiC,IAAI,EAAA8C,aAAA,GAAAzB,GAAG,CAAC2B,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcrC,IAAI,cAAAsC,kBAAA,uBAAlBA,kBAAA,CAAoBzB,OAAO,KAAID,GAAG,CAACC,OAAO,CAAC,CAAC;IAClG;EACF,CAAC;;EAED;EACA,oBACEtC,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BxE,KAAA,CAAAiE,aAAA;IAAIC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,uBAAyB,CAAC,EAC9C7D,KAAK,iBAAIX,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAACO,IAAI,EAAC,OAAO;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE7D,KAAW,CAAC,EACvEI,WAAW,iBAAIf,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAACO,IAAI,EAAC,OAAO;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEzD,WAAiB,CAAC,EACnFF,aAAa,iBAAIb,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAACO,IAAI,EAAC,OAAO;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE3D,aAAmB,CAAC,EACxFN,SAAS,CAACwB,GAAG,CAAEC,QAAQ,iBACtBhC,KAAA,CAAAiE,aAAA;IAAKZ,GAAG,EAAErB,QAAQ,CAACG,EAAG;IAAC+B,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1CxE,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBxE,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBxE,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BxE,KAAA,CAAAiE,aAAA;IAAKS,GAAG,EAAG,yBAAwB1C,QAAQ,CAAC2C,MAAO,EAAE;IAACC,GAAG,EAAE5C,QAAQ,CAAC6C,MAAO;IAACX,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChG,CAAC,eACNxE,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBxE,KAAA,CAAAiE,aAAA;IAAIC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAExC,QAAQ,CAAC6C,MAAW,CAAC,eACjD7E,KAAA,CAAAiE,aAAA;IAAGC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAExC,QAAQ,CAAC8C,WAAe,CAAC,eACnD9E,KAAA,CAAAiE,aAAA;IAAGC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAQ,EAACxC,QAAQ,CAAC+C,MAAU,CAAC,eACtD/E,KAAA,CAAAiE,aAAA;IAAGC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAS,EAACxC,QAAQ,CAACgD,MAAU,CAAC,eACvDhF,KAAA,CAAAiE,aAAA;IAAMgB,QAAQ,EAAGlC,CAAC,IAAKD,mBAAmB,CAACC,CAAC,EAAEf,QAAQ,CAACG,EAAE,CAAE;IAAAgC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzDxE,KAAA,CAAAiE,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BxE,KAAA,CAAAiE,aAAA;IAAOC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBxE,KAAA,CAAAiE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExE,KAAA,CAAAiE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExE,KAAA,CAAAiE,aAAA;IAAIiB,KAAK,EAAC,KAAK;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAS,CAAC,eAC1BxE,KAAA,CAAAiE,aAAA;IAAIiB,KAAK,EAAC,KAAK;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAmB,CAAC,eACpCxE,KAAA,CAAAiE,aAAA;IAAIiB,KAAK,EAAC,KAAK;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAAuB,CACrC,CACC,CAAC,eACRxE,KAAA,CAAAiE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGxC,QAAQ,CAACC,SAAS,CAACF,GAAG,CAAC,CAAC6B,QAAQ,EAAEuB,KAAK,kBACtCnF,KAAA,CAAAiE,aAAA;IAAIZ,GAAG,EAAE8B,KAAM;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbxE,KAAA,CAAAiE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKZ,QAAQ,CAACwB,KAAU,CAAC,eACzBpF,KAAA,CAAAiE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKZ,QAAQ,CAACyB,QAAa,CAAC,eAC5BrF,KAAA,CAAAiE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExE,KAAA,CAAAiE,aAAA;IACEqB,IAAI,EAAC,QAAQ;IACbpB,SAAS,EAAC,cAAc;IACxBqB,YAAY,EAAE3B,QAAQ,CAACyB,QAAS;IAChCG,QAAQ,EAAGzC,CAAC,IAAKL,oBAAoB,CAACV,QAAQ,CAACG,EAAE,EAAEyB,QAAQ,CAACwB,KAAK,EAAErC,CAAC,CAAC0C,MAAM,CAACC,KAAK,CAAE;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpF,CACC,CACF,CACL,CACI,CACF,CACJ,CAAC,eACNxE,KAAA,CAAAiE,aAAA;IAAQqB,IAAI,EAAC,QAAQ;IAACpB,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,uBAA6B,CAC3E,CACH,CACF,CACF,CACF,CACN,CACE,CAAC;AAEV,CAAC;AAED,eAAelE,gBAAgB"},"metadata":{},"sourceType":"module"}