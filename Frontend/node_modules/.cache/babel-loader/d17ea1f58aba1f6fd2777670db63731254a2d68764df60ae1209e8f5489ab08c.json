{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\Mensajes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mensajes() {\n  _s();\n  const {\n    usuario\n  } = useContext(AuthContext);\n  const [mensajesEnviados, setMensajesEnviados] = useState([]);\n  const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajeAResponder, setMensajeAResponder] = useState(null);\n\n  // Ref para evitar efectos secundarios si el componente se desmonta\n  const isMounted = useRef(true);\n\n  // Encapsulamos la lógica de carga de mensajes en una función\n  const cargarMensajes = async () => {\n    if (isMounted.current && usuario && usuario.userId) {\n      setIsLoading(true);\n      try {\n        const enviadosResponse = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\n        const recibidosResponse = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\n        if (isMounted.current) {\n          setMensajesEnviados(enviadosResponse.data);\n          setMensajesRecibidos(recibidosResponse.data);\n        }\n      } catch (error) {\n        console.error('Error al obtener mensajes', error);\n      } finally {\n        if (isMounted.current) {\n          setIsLoading(false);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(\"Ejecutando useEffect en Mensajes\", usuario);\n    const cargarMensajes = async () => {\n      if (usuario && usuario.userId) {\n        setIsLoading(true);\n        try {\n          const [enviados, recibidos] = await Promise.all([axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`), axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`)]);\n          setMensajesEnviados(enviados.data);\n          setMensajesRecibidos(recibidos.data);\n        } catch (error) {\n          console.error('Error al obtener mensajes', error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    cargarMensajes();\n    const intervalId = usuario && usuario.userId ? setInterval(cargarMensajes, 60000) : null;\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [usuario]);\n  /*\r\n    const responderMensaje = () => {\r\n      if (nuevoMensaje.trim() && mensajeAResponder && usuario) {\r\n          axios.post('http://localhost:5000/api/mensajes/crear', {\r\n              emisorId: usuario.userId,\r\n              receptorId: mensajeAResponder.Emisor_Id,\r\n              mensaje: nuevoMensaje,\r\n              productoId: mensajeAResponder.Producto_Id\r\n          })\r\n              .then(response => {\r\n                  setNuevoMensaje('');\r\n                  setMensajeAResponder(null);\r\n                  // Recargar mensajes aquí si es necesario\r\n              })\r\n              .catch(error => console.error('Error al responder mensaje', error));\r\n      }\r\n  };\r\n    const marcarComoLeido = (idMensaje) => {\r\n      axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`)\r\n          .then(response => {\r\n              // Recargar mensajes aquí si es necesario\r\n          })\r\n          .catch(error => console.error('Error al marcar mensaje como leído', error));\r\n  };\r\n    const seleccionarMensajeParaResponder = (mensaje) => {\r\n      setMensajeAResponder(mensaje);\r\n      // Esto preparará la interfaz para escribir una respuesta a este mensaje\r\n  };\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Mensajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando mensajes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }, this), mensajeAResponder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: nuevoMensaje,\n        onChange: e => setNuevoMensaje(e.target.value),\n        placeholder: \"Escribe tu respuesta aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId),\n        children: \"Responder Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), !isLoading && mensajesRecibidos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No has recibido mensajes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 62\n    }, this), !isLoading && mensajesRecibidos.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"De:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 50\n          }, this), \" \", mensaje.Emisor_Id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mensaje:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 50\n          }, this), \" \", mensaje.Mensaje]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => marcarComoLeido(mensaje.Id),\n          children: \"Marcar como Le\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => seleccionarMensajeParaResponder(mensaje),\n          children: \"Responder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, mensaje.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(Mensajes, \"1QLRIZwthfB3xIOEF7kdoDXHC3w=\");\n_c = Mensajes;\nexport default Mensajes;\nvar _c;\n$RefreshReg$(_c, \"Mensajes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","jsxDEV","_jsxDEV","Mensajes","_s","usuario","mensajesEnviados","setMensajesEnviados","mensajesRecibidos","setMensajesRecibidos","isLoading","setIsLoading","nuevoMensaje","setNuevoMensaje","mensajeAResponder","setMensajeAResponder","isMounted","useRef","cargarMensajes","current","userId","enviadosResponse","get","recibidosResponse","data","error","console","log","enviados","recibidos","Promise","all","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","responderMensaje","id","receptorId","length","map","mensaje","Emisor_Id","Mensaje","marcarComoLeido","Id","seleccionarMensajeParaResponder","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/Mensajes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Mensajes() {\r\n    const { usuario } = useContext(AuthContext);\r\n    const [mensajesEnviados, setMensajesEnviados] = useState([]);\r\n    const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n    const [mensajeAResponder, setMensajeAResponder] = useState(null);\r\n\r\n    // Ref para evitar efectos secundarios si el componente se desmonta\r\n    const isMounted = useRef(true);\r\n\r\n    // Encapsulamos la lógica de carga de mensajes en una función\r\n    const cargarMensajes = async () => {\r\n        if (isMounted.current && usuario && usuario.userId) {\r\n            setIsLoading(true);\r\n            try {\r\n                const enviadosResponse = await axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`);\r\n                const recibidosResponse = await axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`);\r\n                if (isMounted.current) {\r\n                    setMensajesEnviados(enviadosResponse.data);\r\n                    setMensajesRecibidos(recibidosResponse.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener mensajes', error);\r\n            } finally {\r\n                if (isMounted.current) {\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"Ejecutando useEffect en Mensajes\", usuario); \r\n        const cargarMensajes = async () => {\r\n            if (usuario && usuario.userId) {\r\n                setIsLoading(true);\r\n                try {\r\n                    const [enviados, recibidos] = await Promise.all([\r\n                        axios.get(`http://localhost:5000/api/mensajes/enviados/${usuario.userId}`),\r\n                        axios.get(`http://localhost:5000/api/mensajes/usuario/${usuario.userId}`)\r\n                    ]);\r\n                    setMensajesEnviados(enviados.data);\r\n                    setMensajesRecibidos(recibidos.data);\r\n                } catch (error) {\r\n                    console.error('Error al obtener mensajes', error);\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        cargarMensajes();\r\n\r\n        const intervalId = usuario && usuario.userId ? setInterval(cargarMensajes, 60000) : null;\r\n\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        };\r\n    }, [usuario]);\r\n    /*\r\n\r\n    const responderMensaje = () => {\r\n        if (nuevoMensaje.trim() && mensajeAResponder && usuario) {\r\n            axios.post('http://localhost:5000/api/mensajes/crear', {\r\n                emisorId: usuario.userId,\r\n                receptorId: mensajeAResponder.Emisor_Id,\r\n                mensaje: nuevoMensaje,\r\n                productoId: mensajeAResponder.Producto_Id\r\n            })\r\n                .then(response => {\r\n                    setNuevoMensaje('');\r\n                    setMensajeAResponder(null);\r\n                    // Recargar mensajes aquí si es necesario\r\n                })\r\n                .catch(error => console.error('Error al responder mensaje', error));\r\n        }\r\n    };\r\n\r\n    const marcarComoLeido = (idMensaje) => {\r\n        axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`)\r\n            .then(response => {\r\n                // Recargar mensajes aquí si es necesario\r\n            })\r\n            .catch(error => console.error('Error al marcar mensaje como leído', error));\r\n    };\r\n\r\n    const seleccionarMensajeParaResponder = (mensaje) => {\r\n        setMensajeAResponder(mensaje);\r\n        // Esto preparará la interfaz para escribir una respuesta a este mensaje\r\n    };\r\n    */\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"my-3\">Mensajes</h2>\r\n            {isLoading && <p>Cargando mensajes...</p>}\r\n\r\n            {/* UI para responder a un mensaje */}\r\n            {mensajeAResponder && (\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={nuevoMensaje}\r\n                        onChange={(e) => setNuevoMensaje(e.target.value)}\r\n                        placeholder=\"Escribe tu respuesta aquí...\"\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary mt-2\"\r\n                        onClick={() => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId)}>\r\n                        Responder Mensaje\r\n                    </button>\r\n                </div>\r\n\r\n            )}\r\n            {/* Mostrar mensajes recibidos */}\r\n            {!isLoading && mensajesRecibidos.length === 0 && <p>No has recibido mensajes.</p>}\r\n            {!isLoading && mensajesRecibidos.map((mensaje) => (\r\n                <div key={mensaje.Id} className=\"card mb-2\"> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>De:</strong> {mensaje.Emisor_Id}</p> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                        <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.Mensaje}</p> {/* Asegúrate de que las propiedades coincidan con tu base de datos */}\r\n                        <button className=\"btn btn-secondary\" onClick={() => marcarComoLeido(mensaje.Id)}>Marcar como Leído</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => seleccionarMensajeParaResponder(mensaje)}>Responder</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mensajes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EAC3C,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAMoB,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIF,SAAS,CAACG,OAAO,IAAId,OAAO,IAAIA,OAAO,CAACe,MAAM,EAAE;MAChDT,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMU,gBAAgB,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAE,+CAA8CjB,OAAO,CAACe,MAAO,EAAC,CAAC;QACzG,MAAMG,iBAAiB,GAAG,MAAMxB,KAAK,CAACuB,GAAG,CAAE,8CAA6CjB,OAAO,CAACe,MAAO,EAAC,CAAC;QACzG,IAAIJ,SAAS,CAACG,OAAO,EAAE;UACnBZ,mBAAmB,CAACc,gBAAgB,CAACG,IAAI,CAAC;UAC1Cf,oBAAoB,CAACc,iBAAiB,CAACC,IAAI,CAAC;QAChD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACN,IAAIT,SAAS,CAACG,OAAO,EAAE;UACnBR,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ;IACJ;EACJ,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZ6B,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEtB,OAAO,CAAC;IACxD,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIb,OAAO,IAAIA,OAAO,CAACe,MAAM,EAAE;QAC3BT,YAAY,CAAC,IAAI,CAAC;QAClB,IAAI;UACA,MAAM,CAACiB,QAAQ,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5ChC,KAAK,CAACuB,GAAG,CAAE,+CAA8CjB,OAAO,CAACe,MAAO,EAAC,CAAC,EAC1ErB,KAAK,CAACuB,GAAG,CAAE,8CAA6CjB,OAAO,CAACe,MAAO,EAAC,CAAC,CAC5E,CAAC;UACFb,mBAAmB,CAACqB,QAAQ,CAACJ,IAAI,CAAC;UAClCf,oBAAoB,CAACoB,SAAS,CAACL,IAAI,CAAC;QACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACrD,CAAC,SAAS;UACNd,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ;IACJ,CAAC;IAEDO,cAAc,CAAC,CAAC;IAEhB,MAAMc,UAAU,GAAG3B,OAAO,IAAIA,OAAO,CAACe,MAAM,GAAGa,WAAW,CAACf,cAAc,EAAE,KAAK,CAAC,GAAG,IAAI;IAExF,OAAO,MAAM;MACT,IAAIc,UAAU,EAAE;QACZE,aAAa,CAACF,UAAU,CAAC;MAC7B;IACJ,CAAC;EACL,CAAC,EAAE,CAAC3B,OAAO,CAAC,CAAC;EACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKI,oBACIH,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlC,OAAA;MAAIiC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjC9B,SAAS,iBAAIR,OAAA;MAAAkC,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAGxC1B,iBAAiB,iBACdZ,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBlC,OAAA;QACIiC,SAAS,EAAC,cAAc;QACxBM,KAAK,EAAE7B,YAAa;QACpB8B,QAAQ,EAAGC,CAAC,IAAK9B,eAAe,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,WAAW,EAAC;MAA8B;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFtC,OAAA;QACIiC,SAAS,EAAC,sBAAsB;QAChCW,OAAO,EAAEA,CAAA,KAAMC,gBAAgB,CAACjC,iBAAiB,CAACkC,EAAE,EAAElC,iBAAiB,CAACmC,UAAU,CAAE;QAAAb,QAAA,EAAC;MAEzF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAER,EAEA,CAAC9B,SAAS,IAAIF,iBAAiB,CAAC0C,MAAM,KAAK,CAAC,iBAAIhD,OAAA;MAAAkC,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChF,CAAC9B,SAAS,IAAIF,iBAAiB,CAAC2C,GAAG,CAAEC,OAAO,iBACzClD,OAAA;MAAsBiC,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,GAAC,eACzClC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBlC,OAAA;UAAGiC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAAClC,OAAA;YAAAkC,QAAA,EAAQ;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACY,OAAO,CAACC,SAAS;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eACtEtC,OAAA;UAAGiC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAAClC,OAAA;YAAAkC,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACY,OAAO,CAACE,OAAO;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eACzEtC,OAAA;UAAQiC,SAAS,EAAC,mBAAmB;UAACW,OAAO,EAAEA,CAAA,KAAMS,eAAe,CAACH,OAAO,CAACI,EAAE,CAAE;UAAApB,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5GtC,OAAA;UAAQiC,SAAS,EAAC,iBAAiB;UAACW,OAAO,EAAEA,CAAA,KAAMW,+BAA+B,CAACL,OAAO,CAAE;UAAAhB,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9G,CAAC;IAAA,GANAY,OAAO,CAACI,EAAE;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOf,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACpC,EAAA,CAnIQD,QAAQ;AAAAuD,EAAA,GAARvD,QAAQ;AAqIjB,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}