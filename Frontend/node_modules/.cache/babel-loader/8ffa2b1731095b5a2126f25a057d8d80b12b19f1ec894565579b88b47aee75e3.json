{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjsan\\\\mi-aplicacion-react\\\\Frontend\\\\src\\\\components\\\\Mensajes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mensajes({\n  usuarioActualId\n}) {\n  _s();\n  const [mensajesEnviados, setMensajesEnviados] = useState([]);\n  const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [nuevoMensaje, setNuevoMensaje] = useState('');\n  const [mensajeAResponder, setMensajeAResponder] = useState(null);\n  useEffect(() => {\n    // Suponiendo que tienes endpoints separados para enviados y recibidos\n    // y que usuarioActualId es el ID del usuario logueado\n    const cargarMensajes = async () => {\n      setIsLoading(true);\n      try {\n        const [enviados, recibidos] = await Promise.all([axios.get(`http://localhost:5000/api/mensajes/enviados/${usuarioActualId}`), axios.get(`http://localhost:5000/api/mensajes/usuario/${usuarioActualId}`)]);\n        setMensajesEnviados(enviados.data);\n        setMensajesRecibidos(recibidos.data);\n      } catch (error) {\n        console.error('Error al obtener mensajes', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    cargarMensajes();\n  }, [usuarioActualId]);\n  const responderMensaje = () => {\n    // Solo puedes responder si hay un mensaje nuevo escrito y un mensaje seleccionado para responder\n    if (nuevoMensaje.trim() && mensajeAResponder) {\n      axios.post('http://localhost:5000/api/mensajes/crear', {\n        emisorId: usuarioActualId,\n        // El ID del usuario actual que está respondiendo\n        receptorId: mensajeAResponder.Emisor_Id,\n        // Suponiendo que la respuesta va al que envió el mensaje original\n        mensaje: nuevoMensaje,\n        productoId: mensajeAResponder.Producto_Id // El ID del producto asociado al mensaje original\n      }).then(response => {\n        // Limpia el estado y recarga los mensajes\n        setNuevoMensaje('');\n        setMensajeAResponder(null);\n        // Aquí podrías recargar los mensajes para mostrar el mensaje recién enviado\n      }).catch(error => console.error('Error al responder mensaje', error));\n    }\n  };\n  const marcarComoLeido = idMensaje => {\n    axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`).then(response => {\n      // Recargar mensajes aquí si es necesario\n    }).catch(error => console.error('Error al marcar mensaje como leído', error));\n  };\n  const seleccionarMensajeParaResponder = mensaje => {\n    setMensajeAResponder(mensaje);\n    // Esto preparará la interfaz para escribir una respuesta a este mensaje\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Mensajes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando mensajes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }, this), mensajeAResponder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: nuevoMensaje,\n        onChange: e => setNuevoMensaje(e.target.value),\n        placeholder: \"Escribe tu respuesta aqu\\xED...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId),\n        children: \"Responder Mensaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), !isLoading && mensajesRecibidos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No has recibido mensajes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 62\n    }, this), !isLoading && mensajesRecibidos.map(mensaje => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"De:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 50\n          }, this), \" \", mensaje.Emisor_Id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mensaje:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 50\n          }, this), \" \", mensaje.Mensaje]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => marcarComoLeido(mensaje.Id),\n          children: \"Marcar como Le\\xEDdo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => seleccionarMensajeParaResponder(mensaje),\n          children: \"Responder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, mensaje.Id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Mensajes, \"SJRAHB4FQ5i9MUkrXyksaSv5OLY=\");\n_c = Mensajes;\nexport default Mensajes;\nvar _c;\n$RefreshReg$(_c, \"Mensajes\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Mensajes","usuarioActualId","_s","mensajesEnviados","setMensajesEnviados","mensajesRecibidos","setMensajesRecibidos","isLoading","setIsLoading","nuevoMensaje","setNuevoMensaje","mensajeAResponder","setMensajeAResponder","cargarMensajes","enviados","recibidos","Promise","all","get","data","error","console","responderMensaje","trim","post","emisorId","receptorId","Emisor_Id","mensaje","productoId","Producto_Id","then","response","catch","marcarComoLeido","idMensaje","put","seleccionarMensajeParaResponder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","id","length","map","Mensaje","Id","_c","$RefreshReg$"],"sources":["C:/Users/mjsan/mi-aplicacion-react/Frontend/src/components/Mensajes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Mensajes({ usuarioActualId }) { \r\n    const [mensajesEnviados, setMensajesEnviados] = useState([]);\r\n    const [mensajesRecibidos, setMensajesRecibidos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [nuevoMensaje, setNuevoMensaje] = useState('');\r\n    const [mensajeAResponder, setMensajeAResponder] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Suponiendo que tienes endpoints separados para enviados y recibidos\r\n        // y que usuarioActualId es el ID del usuario logueado\r\n        const cargarMensajes = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const [enviados, recibidos] = await Promise.all([\r\n                    axios.get(`http://localhost:5000/api/mensajes/enviados/${usuarioActualId}`),\r\n                    axios.get(`http://localhost:5000/api/mensajes/usuario/${usuarioActualId}`)\r\n                ]);\r\n                setMensajesEnviados(enviados.data);\r\n                setMensajesRecibidos(recibidos.data);\r\n            } catch (error) {\r\n                console.error('Error al obtener mensajes', error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        cargarMensajes();\r\n    }, [usuarioActualId]);\r\n\r\n    const responderMensaje = () => {\r\n        // Solo puedes responder si hay un mensaje nuevo escrito y un mensaje seleccionado para responder\r\n        if (nuevoMensaje.trim() && mensajeAResponder) {\r\n            axios.post('http://localhost:5000/api/mensajes/crear', {\r\n                emisorId: usuarioActualId, // El ID del usuario actual que está respondiendo\r\n                receptorId: mensajeAResponder.Emisor_Id, // Suponiendo que la respuesta va al que envió el mensaje original\r\n                mensaje: nuevoMensaje,\r\n                productoId: mensajeAResponder.Producto_Id // El ID del producto asociado al mensaje original\r\n            })\r\n                .then(response => {\r\n                    // Limpia el estado y recarga los mensajes\r\n                    setNuevoMensaje('');\r\n                    setMensajeAResponder(null);\r\n                    // Aquí podrías recargar los mensajes para mostrar el mensaje recién enviado\r\n                })\r\n                .catch(error => console.error('Error al responder mensaje', error));\r\n        }\r\n    };\r\n    const marcarComoLeido = (idMensaje) => {\r\n        axios.put(`http://localhost:5000/api/mensajes/marcar-leido/${idMensaje}`)\r\n            .then(response => {\r\n                // Recargar mensajes aquí si es necesario\r\n            })\r\n            .catch(error => console.error('Error al marcar mensaje como leído', error));\r\n    };\r\n    const seleccionarMensajeParaResponder = (mensaje) => {\r\n        setMensajeAResponder(mensaje);\r\n        // Esto preparará la interfaz para escribir una respuesta a este mensaje\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"my-3\">Mensajes</h2>\r\n            {isLoading && <p>Cargando mensajes...</p>}\r\n\r\n            {/* UI para responder a un mensaje */}\r\n            {mensajeAResponder && (\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={nuevoMensaje}\r\n                        onChange={(e) => setNuevoMensaje(e.target.value)}\r\n                        placeholder=\"Escribe tu respuesta aquí...\"\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary mt-2\"\r\n                        onClick={() => responderMensaje(mensajeAResponder.id, mensajeAResponder.receptorId)}>\r\n                        Responder Mensaje\r\n                    </button>\r\n                </div>\r\n                \r\n            )}\r\n            {/* Mostrar mensajes recibidos */}\r\n            {!isLoading && mensajesRecibidos.length === 0 && <p>No has recibido mensajes.</p>}\r\n            {!isLoading && mensajesRecibidos.map((mensaje) => (\r\n                <div key={mensaje.Id} className=\"card mb-2\">\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><strong>De:</strong> {mensaje.Emisor_Id}</p>\r\n                        <p className=\"card-text\"><strong>Mensaje:</strong> {mensaje.Mensaje}</p>\r\n                        <button className=\"btn btn-secondary\" onClick={() => marcarComoLeido(mensaje.Id)}>Marcar como Leído</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => seleccionarMensajeParaResponder(mensaje)}>Responder</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mensajes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/BL,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAM,CAACM,QAAQ,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5CpB,KAAK,CAACqB,GAAG,CAAE,+CAA8CjB,eAAgB,EAAC,CAAC,EAC3EJ,KAAK,CAACqB,GAAG,CAAE,8CAA6CjB,eAAgB,EAAC,CAAC,CAC7E,CAAC;QACFG,mBAAmB,CAACU,QAAQ,CAACK,IAAI,CAAC;QAClCb,oBAAoB,CAACS,SAAS,CAACI,IAAI,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACNZ,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDK,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACZ,eAAe,CAAC,CAAC;EAErB,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACA,IAAIb,YAAY,CAACc,IAAI,CAAC,CAAC,IAAIZ,iBAAiB,EAAE;MAC1Cd,KAAK,CAAC2B,IAAI,CAAC,0CAA0C,EAAE;QACnDC,QAAQ,EAAExB,eAAe;QAAE;QAC3ByB,UAAU,EAAEf,iBAAiB,CAACgB,SAAS;QAAE;QACzCC,OAAO,EAAEnB,YAAY;QACrBoB,UAAU,EAAElB,iBAAiB,CAACmB,WAAW,CAAC;MAC9C,CAAC,CAAC,CACGC,IAAI,CAACC,QAAQ,IAAI;QACd;QACAtB,eAAe,CAAC,EAAE,CAAC;QACnBE,oBAAoB,CAAC,IAAI,CAAC;QAC1B;MACJ,CAAC,CAAC,CACDqB,KAAK,CAACb,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IAC3E;EACJ,CAAC;EACD,MAAMc,eAAe,GAAIC,SAAS,IAAK;IACnCtC,KAAK,CAACuC,GAAG,CAAE,mDAAkDD,SAAU,EAAC,CAAC,CACpEJ,IAAI,CAACC,QAAQ,IAAI;MACd;IAAA,CACH,CAAC,CACDC,KAAK,CAACb,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC,CAAC;EACnF,CAAC;EACD,MAAMiB,+BAA+B,GAAIT,OAAO,IAAK;IACjDhB,oBAAoB,CAACgB,OAAO,CAAC;IAC7B;EACJ,CAAC;;EAED,oBACI7B,OAAA;IAAKuC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBxC,OAAA;MAAIuC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCpC,SAAS,iBAAIR,OAAA;MAAAwC,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAGxChC,iBAAiB,iBACdZ,OAAA;MAAKuC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBxC,OAAA;QACIuC,SAAS,EAAC,cAAc;QACxBM,KAAK,EAAEnC,YAAa;QACpBoC,QAAQ,EAAGC,CAAC,IAAKpC,eAAe,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,WAAW,EAAC;MAA8B;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF5C,OAAA;QACIuC,SAAS,EAAC,sBAAsB;QAChCW,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAACX,iBAAiB,CAACuC,EAAE,EAAEvC,iBAAiB,CAACe,UAAU,CAAE;QAAAa,QAAA,EAAC;MAEzF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAER,EAEA,CAACpC,SAAS,IAAIF,iBAAiB,CAAC8C,MAAM,KAAK,CAAC,iBAAIpD,OAAA;MAAAwC,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChF,CAACpC,SAAS,IAAIF,iBAAiB,CAAC+C,GAAG,CAAExB,OAAO,iBACzC7B,OAAA;MAAsBuC,SAAS,EAAC,WAAW;MAAAC,QAAA,eACvCxC,OAAA;QAAKuC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBxC,OAAA;UAAGuC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAACxC,OAAA;YAAAwC,QAAA,EAAQ;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACf,OAAO,CAACD,SAAS;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrE5C,OAAA;UAAGuC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAACxC,OAAA;YAAAwC,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACf,OAAO,CAACyB,OAAO;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxE5C,OAAA;UAAQuC,SAAS,EAAC,mBAAmB;UAACW,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACN,OAAO,CAAC0B,EAAE,CAAE;UAAAf,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5G5C,OAAA;UAAQuC,SAAS,EAAC,iBAAiB;UAACW,OAAO,EAAEA,CAAA,KAAMZ,+BAA+B,CAACT,OAAO,CAAE;UAAAW,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9G;IAAC,GANAf,OAAO,CAAC0B,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOf,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACzC,EAAA,CA/FQF,QAAQ;AAAAuD,EAAA,GAARvD,QAAQ;AAiGjB,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}